<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gntour.gangneungyeojido.domain.travel.mapper.TravelMapper">
    <select id="selectAllTravels" resultType="TravelInfo">
        SELECT *
        FROM TRAVEL_INFO
    </select>
    <select id="selectSearchedTravels">
        SELECT *
        FROM TRAVEL_INFO
        WHERE TRAVEL_NAME
        LIKE '%'||#{searchKeyword}||'%'
        ORDER BY TRAVEL_NO DESC
    </select>
    <select id="selectAllThisMonthTravels" resultType="TravelInfo">
        SELECT *
        FROM (
        SELECT *
        FROM TRAVEL_INFO
        WHERE EXTRACT(YEAR FROM REG_DATE) = EXTRACT(YEAR FROM ADD_MONTHS(SYSDATE, -1))
        AND EXTRACT(MONTH FROM REG_DATE) = EXTRACT(MONTH FROM ADD_MONTHS(SYSDATE, -1))
        ORDER BY REG_DATE DESC
        )
        WHERE ROWNUM <![CDATA[<]]>= 10
    </select>
    <select id="selectAllTravelsPage" resultType="TravelListResponse">
        SELECT
            T.TRAVEL_NO,
            T.TRAVEL_NAME,
            T.LATITUDE,
            T.LONGITUDE,
            T.ADDRESS,
            T.PHONE,
            T.USE_TIME,
            T.PARK_FEE,
            T.ENTRY_FEE,
            T.USE_FEE,
            T.INTRODUCE,
            T.REGION,
            T.CATEGORY,
            T.ZOOM_LEVEL,
            T.SITE_URL,
            T.IMAGE_URL,
            T.REG_DATE,
            T.UPDATE_DATE,
            F.FAVORITES_NO
        FROM TRAVEL_INFO T
        LEFT JOIN FAVORITES F ON F.TRAVEL_NO = T.TRAVEL_NO AND F.MEMBER_ID = #{condition.memberId}
        <where>
            <if test="condition.travelName != null">
                AND TRAVEL_NAME LIKE '%' || #{condition.travelName} || '%'
            </if>

            <if test="condition.region != null and condition.region.size > 0">
                AND (
                <foreach collection="condition.region" item="reg" separator="OR">
                    REGION = #{reg}
                </foreach>
                )
            </if>

            <if test="condition.category != null and condition.category.size > 0">
                AND (
                <foreach collection="condition.category" item="cat" separator="OR">
                    CATEGORY = #{cat}
                </foreach>
                )
            </if>
        </where>
        ORDER BY TRAVEL_NO DESC
    </select>
    <select id="selectAllTravelsCount" resultType="_int">
        SELECT COUNT(*)
        FROM TRAVEL_INFO
        <where>
            <if test="travelName != null">
                AND TRAVEL_NAME LIKE '%' || #{travelName} || '%'
            </if>

            <if test="region != null and region.size > 0">
                AND (
                <foreach collection="region" item="reg" separator="OR">
                    REGION = #{reg}
                </foreach>
                )
            </if>

            <if test="category != null and category.size > 0">
                AND (
                <foreach collection="category" item="cat" separator="OR">
                    CATEGORY = #{cat}
                </foreach>
                )
            </if>
        </where>
    </select>
    <select id="selectOneTravel" resultType="TravelInfo">
        SELECT *
        FROM TRAVEL_INFO
        WHERE TRAVEL_NO = #{travelNo}
    </select>
    <!--여행지에 대한 별점 받아오는 mapper-->
    <select id="getScoreByTravelNo" resultType="_double">
        SELECT NVL(ROUND(AVG(SCORE),1), 0.0)
        FROM REVIEW
        WHERE TRAVEL_NO = #{travelNo}
    </select>
    <select id="selectAllRequestMark" resultType="ReqMarkAdd">
        SELECT *
        FROM REQ_MARK_ADD
        ORDER BY REQ_MARK_ADD_NO DESC
    </select>
    <select id="selectAllRequestMarkCount" resultType="_int">
        SELECT COUNT(*) FROM REQ_MARK_ADD
    </select>
    <select id="selectOneRequestMark" resultType="ReqMarkAdd">
        SELECT *
        FROM REQ_MARK_ADD
        WHERE REQ_MARK_ADD_NO = #{reqMarkAddNo}
    </select>
    <update id="updateRequestMark" parameterType="ReqMarkAdd" >
        UPDATE REQ_MARK_ADD
        <set>
            <if test="travelName != null" >
                TRAVEL_NAME = #{travelName},
            </if>
            <if test="latitude != null" >
                LATITUDE = #{latitude},
            </if>
            <if test="longitude != null" >
                LONGITUDE = #{longitude},
            </if>
            <if test="address != null" >
                ADDRESS = #{address},
            </if>
            <if test="phone != null" >
                PHONE = #{phone},
            </if>
            <if test="useTime != null" >
                USE_TIME = #{useTime},
            </if>
            <if test="parkFee != null" >
                PARK_FEE = #{parkFee},
            </if>
            <if test="entryFee != null" >
                ENTRY_FEE = #{entryFee},
            </if>
            <if test="useFee != null" >
                USE_FEE = #{useFee},
            </if>
            <if test="introduce != null" >
                INTRODUCE = #{introduce},
            </if>
            <if test="siteUrl != null" >
                SITE_URL = #{siteUrl},
            </if>
            <if test="imageUrl != null" >
                IMAGE_URL = #{imageUrl},
            </if>
            <if test="acceptableStatus != null" >
                ACCEPTABLE_STATUS = #{acceptableStatus},
            </if>
            UPDATE_DATE = SYSTIMESTAMP
        </set>
        WHERE REQ_MARK_ADD_NO = #{reqMarkAddNo}
    </update>
    <insert id="insertTravel">
        INSERT INTO TRAVEL_INFO(TRAVEL_NO,LATITUDE,LONGITUDE, TRAVEL_NAME, ADDRESS, PHONE, USE_TIME, PARK_FEE, ENTRY_FEE, USE_FEE, SITE_URL, IMAGE_URL, REGION, CATEGORY, INTRODUCE, ZOOM_LEVEL)
        VALUES(SEQ_TRAVEL_INFO_NO.NEXTVAL, #{latitude}, #{longitude},#{travelName}, #{address}, #{phone}, #{useTime}, #{parkFee}, #{entryFee}, #{useFee}, #{siteUrl}, #{imageUrl}, #{region}, #{category}, #{introduce}, #{zoomLevel})
    </insert>
    <update id="updateTravel" parameterType="TravelInfo">
        UPDATE TRAVEL_INFO
        <set>
            <if test="travelName != null" >
                TRAVEL_NAME = #{travelName},
            </if>
            <if test="address != null" >
                ADDRESS = #{address},
            </if>
            <if test="phone != null" >
                PHONE = #{phone},
            </if>
            <if test="useTime != null" >
                USE_TIME = #{useTime},
            </if>
            <if test="parkFee != null" >
                PARK_FEE = #{parkFee},
            </if>
            <if test="entryFee != null" >
                ENTRY_FEE = #{entryFee},
            </if>
            <if test="useFee != null" >
                USE_FEE = #{useFee},
            </if>
            <if test="introduce != null" >
                INTRODUCE = #{introduce},
            </if>
            <if test="siteUrl != null" >
                SITE_URL = #{siteUrl},
            </if>
            <if test="imageUrl != null" >
                IMAGE_URL = #{imageUrl},
            </if>
            UPDATE_DATE = SYSTIMESTAMP
        </set>
        WHERE TRAVEL_NO = #{travelNo}
    </update>
    <delete id="deleteTravel">
        DELETE FROM TRAVEL_INFO
        WHERE TRAVEL_NO = #{travelNo}
    </delete>
    <insert id="insertRequestMark">
        INSERT INTO REQ_MARK_ADD(REQ_MARK_ADD_NO, TRAVEL_NAME, LATITUDE, LONGITUDE, ADDRESS, PHONE, USE_TIME, PARK_FEE, ENTRY_FEE, USE_FEE, INTRODUCE, SITE_URL, IMAGE_URL, MEMBER_ID)
        VALUES (SEQ_REQ_MARK_ADD_NO.NEXTVAL, #{travelName}, #{latitude}, #{longitude}, #{address}, #{phone}, #{useTime}, #{parkFee}, #{entryFee}, #{useFee}, #{introduce}, #{siteUrl}, #{imageUrl}, #{memberId})
    </insert>
</mapper>